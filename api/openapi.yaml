openapi: 3.0.1
info:
  contact: {}
  description: Video streaming server backed by decentralized filesystem.
  license:
    name: GNU General Public License v3.0
    url: https://github.com/dreamvo/gilfoyle/blob/master/LICENSE
  title: Gilfoyle server
  version: 0.1-beta
servers:
- url: http://localhost:8080/
- url: https://localhost:8080/
paths:
  /health:
    get:
      responses:
        "200":
          content: {}
      summary: Check service status
      tags:
      - health
  /v1/videos:
    get:
      description: get latest videos
      parameters:
      - description: Max number of results
        in: query
        name: limit
        schema:
          type: integer
      - description: Number of results to ignore
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Internal Server Error
      summary: Query videos
      tags:
      - videos
    post:
      description: Create a new video
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Video title
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Internal Server Error
      summary: Create a video
      tags:
      - videos
      x-codegen-request-body-name: title
  /v1/videos/{id}:
    delete:
      description: Delete one video
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.DataResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Internal Server Error
      summary: Delete a video
      tags:
      - videos
    get:
      description: get one video
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Internal Server Error
      summary: Get a video
      tags:
      - videos
    patch:
      description: Update an existing video
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Video title
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Internal Server Error
      summary: Update a video
      tags:
      - videos
      x-codegen-request-body-name: title
  /v1/videos/{id}/upload:
    post:
      description: Upload a new video file for a given video ID
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: Video file
                  format: binary
                  type: string
              required:
              - file
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httputils.ErrorResponse'
          description: Internal Server Error
      summary: Upload a video file
      tags:
      - videos
components:
  schemas:
    ent.Video:
      example:
        updated_at: updated_at
        created_at: created_at
        id: id
        title: title
        status: status
      properties:
        created_at:
          type: string
        id:
          type: string
        status:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    httputils.DataResponse:
      example:
        code: 200
        data: '{}'
      properties:
        code:
          example: 200
          type: integer
        data:
          properties: {}
          type: object
      type: object
    httputils.ErrorResponse:
      properties:
        code:
          example: 400
          type: integer
        message:
          example: status bad request
          type: string
      type: object
    inline_response_200:
      example:
        data:
        - updated_at: updated_at
          created_at: created_at
          id: id
          title: title
          status: status
        - updated_at: updated_at
          created_at: created_at
          id: id
          title: title
          status: status
        httputils.DataResponse:
          code: 200
          data: '{}'
      properties:
        data:
          items:
            $ref: '#/components/schemas/ent.Video'
          type: array
        httputils.DataResponse:
          $ref: '#/components/schemas/httputils.DataResponse'
    inline_response_200_1:
      example:
        data:
          updated_at: updated_at
          created_at: created_at
          id: id
          title: title
          status: status
        httputils.DataResponse:
          code: 200
          data: '{}'
      properties:
        data:
          $ref: '#/components/schemas/ent.Video'
        httputils.DataResponse:
          $ref: '#/components/schemas/httputils.DataResponse'
